import dotenv from 'dotenv';
import mongoose from 'mongoose';
import path from 'path';
import { fileURLToPath } from 'url';
import Appointment from '../models/Appointment.js';
import Payment from '../models/Payment.js';
import Session from '../models/Session.js';

// Configurar caminhos absolutos
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Carregar vari√°veis de ambiente do arquivo .env na raiz do projeto
dotenv.config();

async function deleteAllPatientData() {
    try {
        // Verificar se a URI est√° definida
        if (!process.env.MONGODB_URI) {
            throw new Error('‚ùå MONGODB_URI n√£o definida no arquivo .env');
        }

        // Conectar ao MongoDB
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ Conectado ao MongoDB');

        // Substitua pelo ID do paciente desejado
        const PATIENT_ID = 'SEU_PATIENT_ID_AQUI';

        if (!mongoose.Types.ObjectId.isValid(PATIENT_ID)) {
            throw new Error('‚ùå ID do paciente inv√°lido');
        }

        console.log(`üîç Buscando dados do paciente ${PATIENT_ID}...`);

        // Excluir todos os agendamentos do paciente
        const appointmentsResult = await Appointment.deleteMany({ patient: PATIENT_ID });
        console.log(`üóëÔ∏è ${appointmentsResult.deletedCount} agendamento(s) exclu√≠do(s)`);

        // Excluir todas as sess√µes do paciente
        const sessionsResult = await Session.deleteMany({ patient: PATIENT_ID });
        console.log(`üóëÔ∏è ${sessionsResult.deletedCount} sess√£o(√µes) exclu√≠da(s)`);

        // Excluir todos os pagamentos do paciente
        const paymentsResult = await Payment.deleteMany({ patient: PATIENT_ID });
        console.log(`üóëÔ∏è ${paymentsResult.deletedCount} pagamento(s) exclu√≠do(s)`);

        console.log('\nüéâ Todos os dados do paciente foram exclu√≠dos com sucesso!');
        process.exit(0);
    } catch (err) {
        console.error('‚ùå Erro durante a exclus√£o:', err.message);
        process.exit(1);
    }
}

// Executar a fun√ß√£o
deleteAllPatientData();